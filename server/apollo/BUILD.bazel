load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@aspect_rules_js//js:defs.bzl", "js_library", "js_test")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

package(default_visibility = ["//visibility:public"])

npm_link_all_packages(name = "node_modules")

LIB_DEPS = [
    ":node_modules/@apollo/server",
    ":node_modules/@types/body-parser",
    ":node_modules/@types/cors",
    ":node_modules/@types/express",
    ":node_modules/@types/js-yaml",
    ":node_modules/@types/node",
    ":node_modules/body-parser",
    ":node_modules/cors",
    ":node_modules/dotenv",
    ":node_modules/graphql",
    ":node_modules/graphql-tag",
    ":node_modules/js-yaml",
    "//:tally_lib",
]

ts_project(
    name = "lib",
    srcs = glob(
        [
            "src/**/*.ts",
        ],
        exclude = ["src/**/*.test.ts"],
    ),
    composite = True,
    tsconfig = ":tsconfig.json",
    validate = True,  # Checks that tsconfig matches this target.
    deps = LIB_DEPS,
)

# See bazel-testlogs/lib/test/test.log
jest_test(
    name = "test",
    config = "jest_config.json",
    data = glob(["src/**/*.ts"]) + glob(["src/testdata/**/*"]) + LIB_DEPS + [
        ":node_modules/@types/jest",
        ":node_modules/ts-jest",
        ":node_modules/jest",
        ":tsconfig.json",
    ],
    node_modules = ":node_modules",
)

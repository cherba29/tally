load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@aspect_rules_js//js:defs.bzl", "js_library", "js_test")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

package(default_visibility = ["//visibility:public"])

npm_link_all_packages(name = "node_modules")

LIB_DEPS = [
    ":node_modules/@apollo/client",
    ":node_modules/@types/jquery",
    ":node_modules/@types/node",
    ":node_modules/jquery",
    "//:tally_lib",
]

ts_project(
    name = "lib",
    srcs = glob(
        [
            "src/**/*.ts",
        ],
        exclude = ["src/**/*.test.ts"],
    ),
    composite = True,
    declaration = True,
    declaration_map = True,
    tsconfig = ":tsconfig.json",
    validate = True,  # Checks that tsconfig matches this target.
    deps = LIB_DEPS,
)

# See bazel-testlogs/lib/test/test.log
jest_test(
    name = "test",
    config = "jest_config.json",
    data = glob(["src/**/*.ts"]) + LIB_DEPS + [
        ":node_modules/@jest/globals",
        ":node_modules/jest",
        ":node_modules/ts-jest",
    ],
    node_modules = ":node_modules",
    snapshots = glob(
        ["src/**/__snapshots__"],
        exclude_directories = 0,
    ),
)

js_library(
    name = "bundle",
    srcs = [
        "js_summary.html",
        "public/bundle.js",
    ],
)

npm_package(
    name = "tally_client",
    srcs = [
        "package.json",
        ":lib",
    ],
    include_runfiles = False,
    package = "@tally/client",
    root_paths = [
        package_name() + "/src",
    ],
    visibility = ["//visibility:public"],
)
